using Content.Sunrise.Interfaces.Shared;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface;
using Robust.Client.UserInterface.XAML;

namespace Content.Client._Sunrise.SponsorTiers;

[GenerateTypedNameReferences]
public sealed partial class SponsorTiers : Control
{
    private readonly ISharedSponsorsManager? _sponsorsManager;
    private Action<int>? Collapse { get; set; }

    public SponsorTiers()
    {
        IoCManager.InjectDependencies(this);
        RobustXamlLoader.Load(this);

        IoCManager.Instance!.TryResolveType(out _sponsorsManager);
        if (_sponsorsManager == null)
            return;

        _sponsorsManager.LoadedSponsorTiers += ReloadSponsorTiers;

        Collapse += CollapseTier;

        ReloadSponsorTiers(_sponsorsManager.GetSponsorTiers());
    }

    private void CollapseTier(int selectedIndex)
    {
        foreach (var child in SponsorTiersList.Children)
        {
            if (child is SponsorTierEntry entry)
            {
                entry.EntryContent.Visible = entry.Index == selectedIndex;
            }
        }
    }

    private void ReloadSponsorTiers(List<SponsorInfo> sponsorTiers)
    {
        SponsorTiersList.RemoveAllChildren();
        for (var i = 0; i < sponsorTiers.Count; i++)
        {
            var sponsorTier = sponsorTiers[i];
            var entry = new SponsorTierEntry(sponsorTier, Collapse, i);
            SponsorTiersList.AddChild(entry);
        }
    }
}
