using System.Numerics;
using Content.Client.UserInterface.Controls;
using Content.Shared.Chat.Prototypes;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.XAML;
using Robust.Shared.Prototypes;

namespace Content.Client._Sunrise.BloodCult.UI;

[GenerateTypedNameReferences]
public sealed partial class BloodCultMenu : RadialMenu
{
    [Dependency] private readonly EntityManager _entManager = default!;

    private EntityUid _owner;

    public BloodCultMenu()
    {
        IoCManager.InjectDependencies(this);
        RobustXamlLoader.Load(this);
    }

    public void SetEntity(EntityUid uid)
    {
        _owner = uid;

        if (!_entManager.EntityExists(_owner))
        {
            Close();
            return;
        }
    }

    public RadialMenuTextureButton AddButton(string tooltip, Robust.Client.Graphics.Texture texture)
    {
        var button = new RadialMenuTextureButton()
        {
            StyleClasses = { "RadialMenuButton" },
            SetSize = new Vector2(64f, 64f),
            ToolTip = tooltip,
        };
        var scale = Vector2.One;

        if (texture.Width <= 32)
        {
            scale *= 2;
        }

        var tex = new TextureRect
        {
            VerticalAlignment = VAlignment.Center,
            HorizontalAlignment = HAlignment.Center,
            Texture = texture,
            TextureScale = scale,
        };

        button.AddChild(tex);
        var main = FindControl<RadialContainer>("Main");
        main.AddChild(button);

        return button;
    }
}


public sealed class EmoteMenuButton : RadialMenuTextureButton
{
    public ProtoId<EmotePrototype> ProtoId { get; set; }
}
